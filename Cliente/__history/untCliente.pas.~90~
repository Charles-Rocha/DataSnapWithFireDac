unit untCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DBXDataSnap,
  IPPeerClient, Data.DBXCommon, Vcl.ExtCtrls, Vcl.DBCtrls, Vcl.Grids,
  Vcl.DBGrids, Data.DB, Datasnap.DBClient, Datasnap.DSConnect, Data.SqlExpr,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Menus;

type
  TfrmCliente = class(TForm)
    btnEnderecoIntegracao: TButton;
    MainMenu1: TMainMenu;
    Iniciar1: TMenuItem;
    Conectar1: TMenuItem;
    N1: TMenuItem;
    Sair1: TMenuItem;
    Cadastro1: TMenuItem;
    Inserir1: TMenuItem;
    Editar1: TMenuItem;
    N2: TMenuItem;
    Deletar1: TMenuItem;
    CadastraremLote1: TMenuItem;
    pnlPrincipal: TPanel;
    pnlGrid: TPanel;
    DBGrid1: TDBGrid;
    pnlTotalRegistros: TPanel;
    lblTotalRegistros: TLabel;
    procedure cdsPessoaAfterPost(DataSet: TDataSet);
    procedure btnEnderecoIntegracaoClick(Sender: TObject);
    procedure Sair1Click(Sender: TObject);
    procedure Deletar1Click(Sender: TObject);
    procedure CadastraremLote1Click(Sender: TObject);
  private
    { Private declarations }
    //procedure GerarListaTemporaria;
    //procedure IncluirArrayDML;
  public
    { Public declarations }
  end;

var
  frmCliente: TfrmCliente;

implementation

{$R *.dfm}

uses ClientClassesUnit1, ClientModuleUnit1;

procedure TfrmCliente.btnEnderecoIntegracaoClick(Sender: TObject);
begin
  ClientModule1.ServerMethods1Client.EnderecoIntegracao;
end;

procedure TfrmCliente.CadastraremLote1Click(Sender: TObject);
var
  sPathFile: string;
begin
  sPathFile := ExtractFileName(Application.Name) + 'lista-clientes.csv';
  ClientModule1.ServerMethods1Client.CadastramentoEmLote(sPathFile);
end;

procedure TfrmCliente.cdsPessoaAfterPost(DataSet: TDataSet);
begin
  ClientModule1.cdsPessoa.ApplyUpdates(0);
end;

procedure TfrmCliente.Deletar1Click(Sender: TObject);
var
  idPessoa: integer;
begin
  idPessoa := ClientModule1.cdsPessoaidpessoa.AsInteger;
  ClientModule1.ServerMethods1Client.Delete(idPessoa);
end;

procedure TfrmCliente.Sair1Click(Sender: TObject);
begin
  Close;
end;

{procedure TfrmCliente.IncluirArrayDML;
var
  LQuery: TFDQuery;
begin
  LQuery := TFDQuery.Create(Self);
  mtListaTemporaria.DisableControls;
  //Connection.StartTransaction;
  try
    try
      LQuery.Connection := Connection;
      LQuery.SQL.Text := 'insert into clientes (flnatureza, dsdocumento, nmprimeiro, nmsegundo, dscep) ' +
                         'values (:flnatureza, :dsdocumento, :nmprimeiro, :nmsegundo, :dscep)';
      LQuery.Params.ArraySize := mtListaTemporaria.RecordCount;

      mtListaTemporaria.First;
      while not mtListaTemporaria.Eof do
      begin
        LQuery.ParamByName('flnatureza').AsIntegers[Pred(mtListaTemporaria.RecNo)] := mtListaTemporariaflnatureza.AsInteger;
        LQuery.ParamByName('dsdocumento').AsStrings[Pred(mtListaTemporaria.RecNo)] := mtListaTemporariadsdocumento.AsString;
        LQuery.ParamByName('nmprimeiro').AsStrings[Pred(mtListaTemporaria.RecNo)] := mtListaTemporarianmprimeiro.AsString;
        LQuery.ParamByName('nmprimeiro').AsStrings[Pred(mtListaTemporaria.RecNo)] := mtListaTemporarianmsegundo.AsString;
        LQuery.ParamByName('nmsegundo').AsStrings[Pred(mtListaTemporaria.RecNo)] := mtListaTemporariadscep.AsString;
        mtListaTemporaria.Next;
      end;

      if (LQuery.Params.ArraySize > 0) then
        LQuery.Execute(LQuery.Params.ArraySize);

      if Connection.InTransaction then
        Connection.Commit;

      qryClientes.Close;
      qryClientes.Open();
      qryClientes.FetchAll;
    except
      on E:Exception do
      begin
        if Connection.InTransaction then
          Connection.Rollback;
        raise;
      end;
    end;
  finally
    mtListaTemporaria.EnableControls;
    LQuery.Free;
  end;
end;}

{procedure TfrmCliente.GerarListaTemporaria;
var
  LListaClientes, LCliente: TStringList;
  LLine: string;
begin
  mtListaTemporaria.Close;
  mtListaTemporaria.Open;
  mtListaTemporaria.DisableControls;
  LListaClientes := TStringList.Create;
  LCliente := TStringList.Create;
  try
    LListaClientes.LoadFromFile(ExtractFileName(Application.Name) + 'lista-clientes.csv');
    for LLine in LListaClientes do
    begin
      LCliente.StrictDelimiter := True;
      LCliente.CommaText := LLine;
      mtListaTemporaria.Append;
      mtListaTemporariaflnatureza.AsInteger := LCliente[0].ToInteger;
      mtListaTemporariadsdocumento.AsString := LCliente[1];
      mtListaTemporarianmprimeiro.AsString := LCliente[2];
      mtListaTemporarianmsegundo.AsString := LCliente[3];
      mtListaTemporariadscep.AsString := LCliente[4];
      mtListaTemporaria.Post;
    end;
    lblTotalRegistros.Caption := 'Total de registros: ' + IntToStr(LListaClientes.Count);
  finally
    LCliente.Free;
    LListaClientes.Free;
    mtListaTemporaria.EnableControls;
  end;
end;}

end.
